/* Test Binary Mode Processing */
/* This test covers binary mode vs Unicode mode differences */

"=== BINARY MODE TEST ===\n".echo();
"Testing binary mode processing vs Unicode mode\n".echo();

/* Test 1: Basic text in both modes */
"Test 1: Basic text in both modes\n".echo();
input = "Hello World\nLine 2\nLine 3";
result_unicode = input.grep("Hello", "", "", "", "UNICODE");
result_binary = input.grep("Hello", "", "", "", "BINARY");
("Input: " + input + "\n").echo();
("Unicode mode result: " + result_unicode.str() + "\n").echo();
("Binary mode result: " + result_binary.str() + "\n").echo();
("Expected (Unicode): ...\n").echo();
("Expected (Binary): ...\n").echo();
"---\n".echo();

/* Test 2: Null bytes in input */
"Test 2: Null bytes in input\n".echo();
input_with_nulls = "Hello\x00World\nLine\x00with\x00nulls";
result_unicode = input_with_nulls.grep("Hello", "", "", "", "UNICODE");
result_binary = input_with_nulls.grep("Hello", "", "", "", "BINARY");
("Input: Hello\\x00World\\nLine\\x00with\\x00nulls\n").echo();
("Unicode mode result: " + result_unicode.str() + "\n").echo();
("Binary mode result: " + result_binary.str() + "\n").echo();
("Expected (Unicode): ...\n").echo();
("Expected (Binary): ...\n").echo();
"---\n".echo();

/* Test 3: Control characters */
"Test 3: Control characters\n".echo();
input_control = "Hello\x01\x02\x03World\nLine\x04\x05\x06with\x07control";
result_unicode = input_control.grep("Hello", "", "", "", "UNICODE");
result_binary = input_control.grep("Hello", "", "", "", "BINARY");
("Input: Hello\\x01\\x02\\x03World\\nLine\\x04\\x05\\x06with\\x07control\n").echo();
("Unicode mode result: " + result_unicode.str() + "\n").echo();
("Binary mode result: " + result_binary.str() + "\n").echo();
("Expected (Unicode): ...\n").echo();
("Expected (Binary): ...\n").echo();
"---\n".echo();

/* Test 4: Pattern with null bytes */
"Test 4: Pattern with null bytes\n".echo();
input = "Hello\x00World\nLine\x00with\x00nulls";
result_unicode = input.grep("Hello\x00", "", "", "", "UNICODE");
result_binary = input.grep("Hello\x00", "", "", "", "BINARY");
("Pattern: Hello\\x00\n").echo();
("Unicode mode result: " + result_unicode.str() + "\n").echo();
("Binary mode result: " + result_binary.str() + "\n").echo();
("Expected (Unicode): ...\n").echo();
("Expected (Binary): ...\n").echo();
"---\n".echo();

/* Test 5: Pattern with control characters */
"Test 5: Pattern with control characters\n".echo();
input = "Hello\x01World\nLine\x01with\x01control";
result_unicode = input.grep("Hello\x01", "", "", "", "UNICODE");
result_binary = input.grep("Hello\x01", "", "", "", "BINARY");
("Pattern: Hello\\x01\n").echo();
("Unicode mode result: " + result_unicode.str() + "\n").echo();
("Binary mode result: " + result_binary.str() + "\n").echo();
("Expected (Unicode): ...\n").echo();
("Expected (Binary): ...\n").echo();
"---\n".echo();

/* Test 6: Unicode characters in binary mode */
"Test 6: Unicode characters in binary mode\n".echo();
input_unicode = "café\nCAFÉ\ncafe\u0301\nCafe";
result_unicode = input_unicode.grep("café", "", "", "", "UNICODE");
result_binary = input_unicode.grep("café", "", "", "", "BINARY");
("Input: café\\nCAFÉ\\ncafé\\nCafe\n").echo();
("Pattern: café\n").echo();
("Unicode mode result: " + result_unicode.str() + "\n").echo();
("Binary mode result: " + result_binary.str() + "\n").echo();
("Expected (Unicode): ...\n").echo();
("Expected (Binary): ...\n").echo();
"---\n".echo();

/* Test 7: Case sensitivity in binary mode */
"Test 7: Case sensitivity in binary mode\n".echo();
input = "Hello WORLD\nHELLO world\nhello World";
result_unicode = input.grep("hello", "i", "", "", "UNICODE");
result_binary = input.grep("hello", "i", "", "", "BINARY");
("Pattern: hello (case-insensitive)\n").echo();
("Unicode mode result: " + result_unicode.str() + "\n").echo();
("Binary mode result: " + result_binary.str() + "\n").echo();
("Expected (Unicode): ...\n").echo();
("Expected (Binary): ...\n").echo();
"---\n".echo();

/* Test 8: Diacritic handling in binary mode */
"Test 8: Diacritic handling in binary mode\n".echo();
input = "café\nCAFÉ\ncafe\u0301\nCafe";
result_unicode = input.grep("cafe", "d", "", "", "UNICODE");
result_binary = input.grep("cafe", "d", "", "", "BINARY");
("Pattern: cafe (diacritic-insensitive)\n").echo();
("Unicode mode result: " + result_unicode.str() + "\n").echo();
("Binary mode result: " + result_binary.str() + "\n").echo();
("Expected (Unicode): ...\n").echo();
("Expected (Binary): ...\n").echo();
"---\n".echo();

/* Test 9: JSON output in binary mode */
"Test 9: JSON output in binary mode\n".echo();
input = "Hello\x00World\nLine\x00with\x00nulls";
result_unicode = input.grep("Hello", "oj", "", "", "UNICODE");
result_binary = input.grep("Hello", "oj", "", "", "BINARY");
("Pattern: Hello (JSON output)\n").echo();
("Unicode mode result: " + result_unicode.str() + "\n").echo();
("Binary mode result: " + result_binary.str() + "\n").echo();
("Expected (Unicode): ...\n").echo();
("Expected (Binary): ...\n").echo();
"---\n".echo();

/* Test 10: Large binary data */
"Test 10: Large binary data\n".echo();
large_binary = "";
i = 0;
while(i < 1000) {
    large_binary = large_binary + "Line " + i.str() + "\x00\x01\x02\n";
    i += 1;
}
result_unicode = large_binary.grep("Line 500", "", "", "", "UNICODE");
result_binary = large_binary.grep("Line 500", "", "", "", "BINARY");
("Input: (1000 lines with binary data)\n").echo();
("Pattern: Line 500\n").echo();
("Unicode mode result length: " + result_unicode.len() + "\n").echo();
("Binary mode result length: " + result_binary.len() + "\n").echo();
("Expected (Unicode): ...\n").echo();
("Expected (Binary): ...\n").echo();
"---\n".echo();

/* Test 11: Invalid UTF-8 in binary mode */
"Test 11: Invalid UTF-8 in binary mode\n".echo();
invalid_utf8 = "Hello\xFF\xFE\xFDWorld\nInvalid\xC0\x80UTF8";
result_unicode = invalid_utf8.grep("Hello", "", "", "", "UNICODE");
result_binary = invalid_utf8.grep("Hello", "", "", "", "BINARY");
("Input: Hello\\xFF\\xFE\\xFDWorld\\nInvalid\\xC0\\x80UTF8\n").echo();
("Pattern: Hello\n").echo();
("Unicode mode result: " + result_unicode.str() + "\n").echo();
("Binary mode result: " + result_binary.str() + "\n").echo();
("Expected (Unicode): ...\n").echo();
("Expected (Binary): ...\n").echo();
"---\n".echo();

/* Test 12: Parallel processing in binary mode */
"Test 12: Parallel processing in binary mode\n".echo();
input = "Hello\x00World\nLine\x00with\x00nulls\nMore\x01\x02\x03data";
result_unicode = input.grep("Hello", "", "", "", "UNICODE", 2);
result_binary = input.grep("Hello", "", "", "", "BINARY", 2);
("Pattern: Hello (2 workers)\n").echo();
("Unicode mode result: " + result_unicode.str() + "\n").echo();
("Binary mode result: " + result_binary.str() + "\n").echo();
("Expected (Unicode): ...\n").echo();
("Expected (Binary): ...\n").echo();
"---\n".echo();

"=== BINARY MODE SUMMARY ===\n".echo();
"All binary mode tests completed.\n".echo();
"Key differences expected:\n".echo();
"- Binary mode should handle null bytes and control characters as literal bytes\n".echo();
"- Unicode mode should process text according to Unicode standards\n".echo();
"- Binary mode may not support Unicode normalization or case folding\n".echo(); 