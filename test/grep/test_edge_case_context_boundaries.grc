/*
Grapa .grc File Authoring Rules (Windows)
- Use block comments for all comments (do not use //). Block comments should be written as in this header.
- Always use .echo() as a method: "string".echo(); or (str1+str2).echo();
- End every command with a ; character
- Use while loops instead of for (Grapa does not support for)
- Wrap string concatenations in parentheses: (str1+str2).echo();
- Arrays (type $ARRAY) and lists (type $LIST) are accessed with [index] syntax, not .get().
  Example:
    ar = [1,2,3];
    ar[1]; // returns 2
    ar = {"a":11,"b":22,"c":33};
    ar[1]; // returns 22
    ar["b"]; // returns 22
- Use .get("key") for object property access, not for arrays/lists.
- Validate syntax against known-good .grc files before adding new code
- Prefer simple, explicit constructs for compatibility
- To run this file on Windows:
    .\grep.exe -q -cfile path/file.grc
- See the living section in docs/obj/grep.md for updates.

Edge Case Category: Context at File Boundaries
- Tests context lines at the start and end of file, and context merging/separators, as supported by ripgrep/PCRE2.
- Each test prints input, pattern, options, result, and expected output.
*/

"=== CONTEXT AT FILE BOUNDARIES EDGE CASES ===\n".echo();

/* Test 1: Context at start of file */
input = "Line 1\nLine 2\nLine 3\nLine 4";
pattern = "Line 1";
result = input.grep(pattern, "B1");
("Input: '" + input + "'\n").echo();
("Pattern: '" + pattern + "', Options: B1\n").echo();
("Result: " + result.str() + "\n").echo();
("Expected: [\"Line 1\n\", \"Line 2\n\"]\n").echo();
"---\n".echo();

/* Test 2: Context at end of file */
pattern = "Line 4";
result = input.grep(pattern, "A1");
("Pattern: '" + pattern + "', Options: A1\n").echo();
("Result: " + result.str() + "\n").echo();
("Expected: [\"Line 3\n\", \"Line 4\"]\n").echo();
"---\n".echo();

/* Test 3: Context merging and separators */
input2 = "a\nb\nc\nd\ne\nf\ng\nh\ni\nj";
pattern = "c|i";
result = input2.grep(pattern, "A1B1");
("Input: '" + input2 + "'\n").echo();
("Pattern: '" + pattern + "', Options: A1B1\n").echo();
("Result: " + result.str() + "\n").echo();
("Expected: [\"b\n\", \"c\n\", \"d\n\", \"--\n\", \"h\n\", \"i\n\", \"j\"]\n").echo();
"---\n".echo(); 