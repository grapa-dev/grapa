/*
Grapa Grep Malformed/Invalid Unicode Edge Cases
- Tests invalid UTF-8, unpaired surrogates, noncharacters, BOM/mixed encoding.
- Ensures production-readiness for mission-critical use and ripgrep parity.
- If any test causes a crash or error, document and update implementation.
*/

'=== MALFORMED/INVALID UNICODE EDGE CASES ===\n'.echo();

/* Test 1: Invalid UTF-8 (simulate with binary data) */
'Invalid UTF-8: binary data with invalid bytes\n'.echo();
input1 = '\x80\x81\xfe\xff';
pattern1 = '.';
result1 = input1.grep(pattern1, 'o', '', '', 'BINARY');
('Result: ' + result1.str() + '\n').echo();
('Expected: Should not crash; may return raw bytes.\n').echo();
'---\n'.echo();

/* Test 2: Unpaired surrogate (simulate as string) */
'Unpaired surrogate: \ud800\n'.echo();
input2 = '\ud800';
pattern2 = '.';
result2 = input2.grep(pattern2, 'o');
('Result: ' + result2.str() + '\n').echo();
('Expected: Should not crash; may return replacement character or error.\n').echo();
'---\n'.echo();

/* Test 3: Unicode noncharacters (U+FFFF, U+10FFFF) */
'Unicode noncharacters: U+FFFF, U+10FFFF\n'.echo();
input3 = '\uffff\U0010ffff';
pattern3 = '.';
result3 = input3.grep(pattern3, 'o');
('Result: ' + result3.str() + '\n').echo();
('Expected: Should not crash; may return noncharacters.\n').echo();
'---\n'.echo();

/* Test 4: BOM and mixed encoding (simulate BOM) */
'BOM and mixed encoding: \ufeff at start\n'.echo();
input4 = '\ufeffHello';
pattern4 = 'Hello';
result4 = input4.grep(pattern4, 'o');
('Result: ' + result4.str() + '\n').echo();
('Expected: ["Hello"] if BOM is ignored.\n').echo();
'---\n'.echo(); 