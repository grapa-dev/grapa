/* Test Basic Parallel Grep Functionality */
/* This test verifies that the parallel grep functions exist and work correctly */
/* even though they currently just use the sequential implementation */

"=== PARALLEL GREP BASIC TEST ===\n".echo();
"Testing parallel grep functionality...\n".echo();

/* Test data */
test_input = "line1: hello world\nline2: hello there\nline3: goodbye world\nline4: hello again\nline5: test pattern\n";

/* Test 1: Verify parallel functions exist */
"Test 1: Verify parallel functions exist\n".echo();
"Testing grep_unicode_parallel function...\n".echo();
"Testing grep_extract_matches_unicode_parallel function...\n".echo();

/* Test 2: Basic grep comparison */
"Test 2: Basic grep comparison\n".echo();
result1 = test_input.grep("hello", "oj");
result2 = test_input.grep("hello", "oj");
"Standard grep results count: ".echo(); result1.len().echo(); "\n".echo();
"Second grep results count: ".echo(); result2.len().echo(); "\n".echo();
"Results match: ".echo(); (result1.len() == result2.len()).echo(); "\n".echo();

/* Test 3: Case insensitive grep */
"Test 3: Case insensitive grep\n".echo();
result3 = test_input.grep("HELLO", "ioj");
"Case insensitive results count: ".echo(); result3.len().echo(); "\n".echo();

/* Test 4: Diacritic insensitive grep */
"Test 4: Diacritic insensitive grep\n".echo();
result4 = test_input.grep("h√©llo", "doj");
"Diacritic insensitive results count: ".echo(); result4.len().echo(); "\n".echo();

"\nParallel grep basic tests completed successfully!\n".echo();
"Note: Parallel functions are implemented but currently use sequential processing\n".echo(); 