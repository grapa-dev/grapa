/*
Grapa .grc File Authoring Rules (Windows)
- Use block comments for all comments (do not use //). Block comments should be written as in this header.
- Always use .echo() as a method: "string".echo(); or (str1+str2).echo();
- End every command with a ; character
- Use while loops instead of for (Grapa does not support for)
- Wrap string concatenations in parentheses: (str1+str2).echo();
- Arrays (type $ARRAY) and lists (type $LIST) are accessed with [index] syntax, not .get().
  Example:
    ar = [1,2,3];
    ar[1]; // returns 2
    ar = {"a":11,"b":22,"c":33};
    ar[1]; // returns 22
    ar["b"]; // returns 22
- Use .get("key") for object property access, not for arrays/lists.
- Validate syntax against known-good .grc files before adding new code
- Prefer simple, explicit constructs for compatibility
- To run this file on Windows:
    .\grep.exe -q -cfile path/file.grc
- See the living section in docs/obj/grep.md for updates.

Edge Case Category: Zero-Length Matches
- Tests zero-length matches at start/end of line, empty pattern, lookarounds, and related PCRE2/ripgrep edge cases.
- Each test prints input, pattern, options, result, and expected output.
*/

"=== ZERO-LENGTH MATCH EDGE CASES ===\n".echo();

/* Test 1: Start of line (^) zero-length match */
input = "a\nb\n";
pattern = "^";
result = input.grep(pattern, "o");
("Input: '" + input + "'\n").echo();
("Pattern: '" + pattern + "', Options: o\n").echo();
("Result: " + result.str() + "\n").echo();
('Expected: ["", "a", "", "b", ""]\n').echo();
"---\n".echo();

/* Test 2: End of line ($) zero-length match */
pattern = "$";
result = input.grep(pattern, "o");
("Pattern: '" + pattern + "', Options: o\n").echo();
("Result: " + result.str() + "\n").echo();
('Expected: ["a", "", "b", "", ""]\n').echo();
"---\n".echo();

/* Test 3: Empty pattern */
pattern = "";
result = input.grep(pattern, "o");
("Pattern: (empty), Options: o\n").echo();
("Result: " + result.str() + "\n").echo();
('Expected: ["", "a", "", "b", "", ""]\n').echo();
"---\n".echo();

/* Test 4: Lookahead zero-length match */
pattern = "(?=a)";
result = input.grep(pattern, "o");
("Pattern: '" + pattern + "', Options: o\n").echo();
("Result: " + result.str() + "\n").echo();
('Expected: ["", ""] (zero-length at positions before \'a\')\n').echo();
"---\n".echo();

/* Test 5: Lookbehind zero-length match */
pattern = "(?<=a)";
result = input.grep(pattern, "o");
("Pattern: '" + pattern + "', Options: o\n").echo();
("Result: " + result.str() + "\n").echo();
('Expected: ["", ""] (zero-length at positions after \'a\')\n').echo();
"---\n".echo(); 