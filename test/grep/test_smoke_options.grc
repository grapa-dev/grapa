/* Smoke Test: Core Options
   - Runs on every build to verify core options are working
   - Execution time: < 30 seconds
   - Purpose: Quick validation of core grep options
   - Status: Critical for development workflow
*/

"=== SMOKE TEST: CORE OPTIONS ===\n".echo();
"Running core options validation...\n".echo();

/* Test 1: Match-only (o) option */
"Test 1: Match-only (o) option\n".echo();
input = "Hello world\nGoodbye world\nHello universe";
result = input.grep("\\w+", "o");
("Input: " + input + "\n").echo();
("Pattern: \\w+, Options: o\n").echo();
("Result: " + result.str() + "\n").echo();
("Expected: Array of word matches\n").echo();
("Status: " + (result.len() > 0 ? "PASS" : "FAIL") + "\n").echo();
"---\n".echo();

/* Test 2: Case-insensitive (i) option */
"Test 2: Case-insensitive (i) option\n".echo();
result = input.grep("hello", "i");
("Pattern: hello, Options: i\n").echo();
("Result: " + result.str() + "\n").echo();
("Expected: Lines containing Hello (case-insensitive)\n").echo();
("Status: " + (result.len() == 2 ? "PASS" : "FAIL") + "\n").echo();
"---\n".echo();

/* Test 3: Invert match (v) option */
"Test 3: Invert match (v) option\n".echo();
result = input.grep("Hello", "v");
("Pattern: Hello, Options: v\n").echo();
("Result: " + result.str() + "\n").echo();
("Expected: Lines not containing Hello\n").echo();
("Status: " + (result.len() == 1 ? "PASS" : "FAIL") + "\n").echo();
"---\n".echo();

/* Test 4: Line numbers (n) option */
"Test 4: Line numbers (n) option\n".echo();
result = input.grep("Hello", "n");
("Pattern: Hello, Options: n\n").echo();
("Result: " + result.str() + "\n").echo();
("Expected: Lines with line numbers\n").echo();
("Status: " + (result.len() == 2 ? "PASS" : "FAIL") + "\n").echo();
"---\n".echo();

/* Test 5: Count only (c) option */
"Test 5: Count only (c) option\n".echo();
result = input.grep("Hello", "c");
("Pattern: Hello, Options: c\n").echo();
("Result: " + result.str() + "\n").echo();
("Expected: Count of matches\n").echo();
("Status: " + (result == 2 ? "PASS" : "FAIL") + "\n").echo();
"---\n".echo();

/* Test 6: JSON output (j) option */
"Test 6: JSON output (j) option\n".echo();
result = input.grep("Hello", "j");
("Pattern: Hello, Options: j\n").echo();
("Result: " + result.str() + "\n").echo();
("Expected: JSON array\n").echo();
("Status: " + (result.len() == 2 ? "PASS" : "FAIL") + "\n").echo();
"---\n".echo();

/* Test 7: All mode (a) option */
"Test 7: All mode (a) option\n".echo();
result = input.grep("Hello", "a");
("Pattern: Hello, Options: a\n").echo();
("Result: " + result.str() + "\n").echo();
("Expected: Full input if matches found\n").echo();
("Status: " + (result.len() == 1 ? "PASS" : "FAIL") + "\n").echo();
"---\n".echo();

/* Test 8: Word boundary (w) option */
"Test 8: Word boundary (w) option\n".echo();
input2 = "foo bar foobar barfoo";
result = input2.grep("foo", "w");
("Input: " + input2 + "\n").echo();
("Pattern: foo, Options: w\n").echo();
("Result: " + result.str() + "\n").echo();
("Expected: Only whole word matches\n").echo();
("Status: " + (result.len() == 1 ? "PASS" : "FAIL") + "\n").echo();
"---\n".echo();

/* Test 9: Exact match (x) option */
"Test 9: Exact match (x) option\n".echo();
input3 = "Hello\nHello world\nHello";
result = input3.grep("Hello", "x");
("Input: " + input3 + "\n").echo();
("Pattern: Hello, Options: x\n").echo();
("Result: " + result.str() + "\n").echo();
("Expected: Only exact matches\n").echo();
("Status: " + (result.len() == 2 ? "PASS" : "FAIL") + "\n").echo();
"---\n".echo();

/* Test 10: Context (A1) option */
"Test 10: Context (A1) option\n".echo();
input4 = "line1\nline2\nline3\nline4";
result = input4.grep("line2", "A1");
("Input: " + input4 + "\n").echo();
("Pattern: line2, Options: A1\n").echo();
("Result: " + result.str() + "\n").echo();
("Expected: Match line plus 1 after\n").echo();
("Status: " + (result.len() == 2 ? "PASS" : "FAIL") + "\n").echo();
"---\n".echo();

"=== SMOKE TEST COMPLETE ===\n".echo();
"Core options validation complete.\n".echo(); 