/*
  Supreme Drop List Scraper
  - Connects to supremecommunity.com
  - Fetches droplist overview and item details
  - Uses threading for parallel data extraction
  - Extracts item name, id, votes, price, description, image, colors, sizing
*/

supremeDroplist = op(week=1,threads=4)
{
	/* Set up certificate and proxy for HTTPS connection */
	local.cert = "client.crt";
	local.proxy = {type: "HTTP", id: "cmatic:KH4mzF2d", ip: "172.241.186.192:29842"};
	
	local.weekN = 1;
	if (week.type()!="$ERR")
		weekN = week;
	
	/* Create network object and connect to site */
	local.n2 = $net();
	local.res = n2.connect("www.supremecommunity.com:443", cert, proxy);
	local.header = {
		User-Agent: "Mozilla/4.0 (compatible; MSIE5.01; Windows NT",
		Host: "www.supremecommunity.com",
		Accept-Language: "en-us",
		accept: "text/html,text/xml,application/xhtml+xml,application/xml",
		Connection: "Keep-Alive",
		Keep-Alive: "timeout=5, max=1000",
		};
		
	/* Fetch droplist overview page */
	local.res = n2.httpsend("GET", "/season/fall-winter2020/droplists/",header,"");
	local.r = n2.httpmessage();
	
	/* Find all droplist links for each week */
	local.data = r.body.findall({name:"a",attr:{"class":"block"},has:{name:"h2",attr:{"class":"droplist-overview-title"}}});
	local.data2 = data.reduce(op(a,b){a += b.$LIST.href;},[]);
	local.z = data2[weekN];
	
	/* Fetch the selected week's droplist page */
	local.res = n2.httpsend("GET", z, header, "");
	local.r2 = n2.httpmessage();
	
	/* Find all item cards on the page */
	local.data = r2.body.findall({name:"div",attr:{"class":"card card-2"}});

	n2.disconnect();

	/* Split data for parallel processing by threads */
	data.split(threads).map(op(b){
		/* Create a new network object for each thread */
		local.n2 = $net();
		local.res = n2.connect("www.supremecommunity.com:443", cert, proxy);
		local.header = {
			User-Agent: "Mozilla/4.0 (compatible; MSIE5.01; Windows NT",
			Host: "www.supremecommunity.com",
			Accept-Language: "en-us",
			accept: "text/html,text/xml,application/xhtml+xml,application/xml",
			Connection: "Keep-Alive",
			Keep-Alive: "timeout=5, max=1000",
			};
		
		local.ret = {};
		local.i = 0;
		local.n = b.len();
		while(i<n)
		{
			local.prec = b[i];
			
			/* Extract item details from card */
			local.itemname = prec.div.$LIST."data-itemname".trim();
			local.itemid = prec.div.$LIST."data-itemid";
			local.upvotesratio = prec.findall({name:"p",attr:{"class":"upvotesratio hidden"}}).p[0];

			local.pricedata = prec.findall({name:"span",attr:{"class":"label-price"}}).span[0];
			local.price = (pricedata.replace("\n","").replace(" ","").replace("$","").split("/"))[0];
			
			local.desc = "";
			local.img = "";
			local.imgData = prec.findall({name:"img"});
			if (imgData.len())
			{
				desc = imgData[0].$LIST.alt;
				img = imgData[0].$LIST.src;
			};

			/* Fetch item details page for colors and sizing */
			local.res = n2.httpsend("GET", "/season/itemdetails/"+itemid+"/", header, "");
			local.r = n2.httpmessage();
			
			local.data0 = r.body.findall({name:"li",has:{value:"Colors"}});
			local.data2 = data0.findall({name:"span"});
			local.colors = data2.reduce(op(a,b){a += b[0].trim();},[]);
			
			data3 = r.body.findall({name:"li",has:{value:"Sizing"}});
			data2 = data3.findall({name:"tr",has:{name:"th",attr:{"class":"title"}}}).findall({name:"th"});
			local.sizing = [];
			if (data2.len())
				local.sizing = data2.reduce(op(a,b){if (b[0]) a+=b[0].trim();},[]);
				
			ret += ( itemname: {
					name:itemname,
					id:itemid,
					desc:desc,
					img:img,
					vote:upvotesratio,
					price:price,
					colors:colors,
					sizing:sizing
				});

			i += 1;
		};
		n2.disconnect();
		ret;
	}).reduce(op(a,b){a ++= b;},{});
};
